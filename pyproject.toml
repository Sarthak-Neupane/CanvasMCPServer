[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "canvas-mcp-server"
version = "0.1.0"
description = "A Model Context Protocol server for Canvas"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Sarthak Neupane", email = "2004neupane@gmail.com" }
]
keywords = ["mcp", "canvas", "tools", "server"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.13"
dependencies = [
    "anyio>=4.9.0",
    "mcp[cli]>=1.12.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
]

[project.scripts]
canvas-mcp-server = "canvas_mcp_server.server:main"

[project.urls]
Homepage = "https://github.com/sarthakneupane/canvas-mcp-server"
Repository = "https://github.com/sarthakneupane/canvas-mcp-server"
Issues = "https://github.com/sarthakneupane/canvas-mcp-server/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/canvas_mcp_server"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py313']
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[tool.mypy]
python_version = "3.13"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
